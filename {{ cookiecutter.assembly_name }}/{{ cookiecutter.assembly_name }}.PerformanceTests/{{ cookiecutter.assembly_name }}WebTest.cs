//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LearnerRecords.API.PerformanceTests
{
    using System;
    using System.Collections.Generic;
    using LearnerRecords.API.PerformanceTests.Models;
    using Microsoft.VisualStudio.TestTools.WebTesting;
    using Microsoft.VisualStudio.TestTools.WebTesting.Rules;
    using Newtonsoft.Json;
    using SharedServices.PerformanceTests.Constants;
    using SharedServices.PerformanceTests.Helpers;

    public class LearnerRecordsWebTest : WebTest
    {
        private JwtTokenGenerator tokenGenerator;

        public LearnerRecordsWebTest()
        {
            this.tokenGenerator = new JwtTokenGenerator();
            this.PreAuthenticate = true;
            this.Proxy = "default";
        }

        public override IEnumerator<WebTestRequest> GetRequestEnumerator()
        {
            // Initialize validation rules that apply to all requests in the WebTest
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.Low))
            {
                ValidateResponseUrl validationRule1 = new ValidateResponseUrl();
                this.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule1.Validate);
            }
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.Low))
            {
                ValidationRuleResponseTimeGoal validationRule2 = new ValidationRuleResponseTimeGoal();
                validationRule2.Tolerance = 0D;
                this.ValidateResponseOnPageComplete += new EventHandler<ValidationEventArgs>(validationRule2.Validate);
            }

            var oid = Guid.NewGuid().ToString();
            var token = tokenGenerator.GenerateToken(oid);
            var aid = Guid.NewGuid().ToString();

            var learnerRecordId1 = Guid.NewGuid().ToString();

            var learnerRecordId2 = Guid.NewGuid().ToString();

            var learnerRecordId3 = Guid.NewGuid().ToString();

            this.BeginTransaction("POST_CreateLearnerRecord");
            WebTestRequest request1 = new WebTestRequest($"{this.Context["$BaseUrl"].ToString()}/api/LearnerRecord");
            request1.ThinkTime = 13;
            request1.Method = "POST";
            request1.Headers.Add(new WebTestRequestHeader("Authorization", $"Bearer {token}"));
            request1.Headers.Add(new WebTestRequestHeader("Content-Type", "application/json"));
            StringHttpBody request1Body = new StringHttpBody();
            request1Body.ContentType = "application/json";
            request1Body.InsertByteOrderMark = false;
            var request1Content = new LearnerRecord();
            request1Content.Id = learnerRecordId1;
            request1Content.UserProfileKey = oid;
            request1Content.UserTenant = "Employability";
            request1Content.RecordType = "GoalCompletionRecord";
            request1Content.RecordData = new StoryEngagementData();
            request1Content.RecordData.StoryIdentifier = "19e595c3-1c3b-4b2b-9669-51ff08aeb5d5";
            var request1JsonContent = JsonConvert.SerializeObject(request1Content);
            request1Body.BodyString = request1JsonContent;
            request1.Body = request1Body;
            yield return request1;
            request1 = null;
            this.EndTransaction("POST_CreateLearnerRecord");

            this.BeginTransaction("POST_CreateLearnerDataRecord");
            WebTestRequest request2 = new WebTestRequest($"{this.Context["$BaseUrl"].ToString()}/api/LearnerRecord/user/GoalCompletionRecord");
            request2.ThinkTime = 15;
            request2.Method = "POST";
            request2.Headers.Add(new WebTestRequestHeader("Authorization", $"Bearer {token}"));
            request2.Headers.Add(new WebTestRequestHeader("Content-Type", "application/json"));
            StringHttpBody request2Body = new StringHttpBody();
            request2Body.ContentType = "application/json";
            request2Body.InsertByteOrderMark = false;
            var request2Content = new StoryEngagementData();
            request2Content.StoryIdentifier = Guid.NewGuid().ToString();
            var request2JsonContent = JsonConvert.SerializeObject(request2Content);
            request2Body.BodyString = request2JsonContent;
            request2.Body = request2Body;
            yield return request2;
            request2 = null;
            this.EndTransaction("POST_CreateLearnerDataRecord");

            this.BeginTransaction("GET_GetLearnerRecordById");
            WebTestRequest request3 = new WebTestRequest($"{this.Context["$BaseUrl"].ToString()}/api/LearnerRecord/user/{learnerRecordId1}");
            request3.ThinkTime = 21;
            request3.Encoding = System.Text.Encoding.GetEncoding("Windows-1252");
            request3.Headers.Add(new WebTestRequestHeader("Authorization", $"Bearer {token}"));
            yield return request3;
            request3 = null;
            this.EndTransaction("GET_GetLearnerRecordById");

            this.BeginTransaction("GET_QueryLearnerRecords");
            WebTestRequest request4 = new WebTestRequest($"{this.Context["$BaseUrl"].ToString()}/api/LearnerRecord/query");
            request4.ThinkTime = 28;
            request4.Encoding = System.Text.Encoding.GetEncoding("Windows-1252");
            request4.Headers.Add(new WebTestRequestHeader("Authorization", $"Bearer {token}"));
            request4.QueryStringParameters.Add("recordType", "GoalCompletionRecord", false, false);
            yield return request4;
            request4 = null;
            this.EndTransaction("GET_QueryLearnerRecords");

            this.BeginTransaction("GET_QueryUserLearnerRecords");
            WebTestRequest request5 = new WebTestRequest($"{this.Context["$BaseUrl"].ToString()}/api/LearnerRecord/user");
            request5.ThinkTime = 15;
            request5.Encoding = System.Text.Encoding.GetEncoding("Windows-1252");
            request5.Headers.Add(new WebTestRequestHeader("Authorization", $"Bearer {token}"));
            request5.QueryStringParameters.Add("recordType", "GoalCompletionRecord", false, false);
            yield return request5;
            request5 = null;
            this.EndTransaction("GET_QueryUserLearnerRecords");

            this.BeginTransaction("POST_CreateLearnerMappingRecord");
            WebTestRequest request6 = new WebTestRequest($"{this.Context["$BaseUrl"].ToString()}/api/LearnerMappingRecord/");
            request6.ThinkTime = 15;
            request6.Method = "POST";
            request6.Encoding = System.Text.Encoding.GetEncoding("Windows-1252");
            request6.Headers.Add(new WebTestRequestHeader("Authorization", $"Bearer {token}"));
            StringHttpBody request6Body = new StringHttpBody();
            request6Body.ContentType = "application/json";
            request6Body.InsertByteOrderMark = false;
            var request6Content = new LearnerMappingRecord();
            request6Content.AssociationId = aid;
            request6Content.UserProfileKey = new string[] { oid };
            var request6JsonContent = JsonConvert.SerializeObject(request6Content);
            request6Body.BodyString = request6JsonContent;
            request6.Body = request6Body;
            yield return request6;
            request6 = null;
            this.EndTransaction("POST_CreateLearnerMappingRecord");

            this.BeginTransaction("GET_GetCumulativeLearnerRecordsByAssociationId");
            WebTestRequest request7 = new WebTestRequest($"{this.Context["$BaseUrl"].ToString()}/api/LearnerRecord/getCumulativeLearnerRecords/{aid}");
            request7.ThinkTime = 18;
            request7.Encoding = System.Text.Encoding.GetEncoding("Windows-1252");
            request7.Headers.Add(new WebTestRequestHeader("Authorization", $"Bearer {token}"));
            yield return request7;
            request7 = null;
            this.EndTransaction("GET_GetCumulativeLearnerRecordsByAssociationId");

            this.BeginTransaction("GET_GetCumulativeLearnerRecords");
            WebTestRequest request17 = new WebTestRequest($"{this.Context["$BaseUrl"].ToString()}/api/LearnerRecord/getCumulativeLearnerRecords");
            request17.ThinkTime = 18;
            request17.Encoding = System.Text.Encoding.GetEncoding("Windows-1252");
            request17.Headers.Add(new WebTestRequestHeader("Authorization", $"Bearer {token}"));
            yield return request17;
            request17 = null;
            this.EndTransaction("GET_GetCumulativeLearnerRecords");

            this.BeginTransaction("GET_GetUserActiveGoals");
            WebTestRequest request8 = new WebTestRequest($"{this.Context["$BaseUrl"].ToString()}/api/goals/user/{oid}");
            request8.ThinkTime = 10;
            request8.Encoding = System.Text.Encoding.GetEncoding("Windows-1252");
            request8.Headers.Add(new WebTestRequestHeader("Authorization", $"Bearer {token}"));
            yield return request8;
            request8 = null;
            this.EndTransaction("GET_GetUserActiveGoals");

            this.BeginTransaction("POST_MapUserContextToGoals");
            WebTestRequest request9 = new WebTestRequest($"{this.Context["$BaseUrl"].ToString()}/api/goals/user/{oid}/getContext");
            request9.ThinkTime = 8;
            request9.Method = "POST";
            request9.Encoding = System.Text.Encoding.GetEncoding("Windows-1252");
            request9.Headers.Add(new WebTestRequestHeader("Authorization", $"Bearer {token}"));
            StringHttpBody request9Body = new StringHttpBody();
            request9Body.ContentType = "application/json";
            request9Body.InsertByteOrderMark = false;
            var request9Content = new List<GoalPathReferenceDto>();
            var goalPathReferenceDto = new GoalPathReferenceDto();
            goalPathReferenceDto.GoalPathId = Guid.NewGuid().ToString();
            goalPathReferenceDto.GoalPathResourceId = Guid.NewGuid().ToString();
            var request9JsonContent = JsonConvert.SerializeObject(request9Content);
            request9Body.BodyString = request9JsonContent;
            request9.Body = request9Body;
            yield return request9;
            request9 = null;
            this.EndTransaction("POST_MapUserContextToGoals");

            this.BeginTransaction("POST_MapUserContextToGoals");
            WebTestRequest request10 = new WebTestRequest($"{this.Context["$BaseUrl"].ToString()}/api/goals/user/{oid}/fromSkills");
            request10.ThinkTime = 9;
            request10.Method = "POST";
            request10.Encoding = System.Text.Encoding.GetEncoding("Windows-1252");
            request10.Headers.Add(new WebTestRequestHeader("Authorization", $"Bearer {token}"));
            StringHttpBody request10Body = new StringHttpBody();
            request10Body.ContentType = "application/json";
            request10Body.InsertByteOrderMark = false;
            var request10Content = new string[] { "random", "string" };
            var request10JsonContent = JsonConvert.SerializeObject(request10Content);
            request10Body.BodyString = request10JsonContent;
            request10.Body = request10Body;
            yield return request10;
            request10 = null;
            this.EndTransaction("POST_MapUserContextToGoals");

            this.BeginTransaction("GET_GetUserStoryRecords");
            WebTestRequest request11 = new WebTestRequest($"{this.Context["$BaseUrl"].ToString()}/api/Stories/user/{oid}");
            request11.ThinkTime = 11;
            request11.Encoding = System.Text.Encoding.GetEncoding("Windows-1252");
            request11.Headers.Add(new WebTestRequestHeader("Authorization", $"Bearer {token}"));
            yield return request11;
            request11 = null;
            this.EndTransaction("GET_GetUserStoryRecords");

            this.BeginTransaction("GET_GetRecordsForStory");
            WebTestRequest request12 = new WebTestRequest($"{this.Context["$BaseUrl"].ToString()}/api/Stories/{TestConstants.StoryIdentifier}");
            request12.ThinkTime = 23;
            request12.Encoding = System.Text.Encoding.GetEncoding("Windows-1252");
            request12.Headers.Add(new WebTestRequestHeader("Authorization", $"Bearer {token}"));
            yield return request12;
            request12 = null;
            this.EndTransaction("GET_GetRecordsForStory");

            this.BeginTransaction("GET_GetTopVotedStories");
            WebTestRequest request13 = new WebTestRequest($"{this.Context["$BaseUrl"].ToString()}/api/Stories/all/topStories");
            request13.ThinkTime = 12;
            request13.Encoding = System.Text.Encoding.GetEncoding("Windows-1252");
            request13.Headers.Add(new WebTestRequestHeader("Authorization", $"Bearer {token}"));
            yield return request13;
            request13 = null;
            this.EndTransaction("GET_GetTopVotedStories");

            this.BeginTransaction("GET_GetStoryVoteCount");
            WebTestRequest request14 = new WebTestRequest($"{this.Context["$BaseUrl"].ToString()}/api/Stories/{TestConstants.StoryIdentifier}/voteCount");
            request14.ThinkTime = 10;
            request14.Encoding = System.Text.Encoding.GetEncoding("Windows-1252");
            request14.Headers.Add(new WebTestRequestHeader("Authorization", $"Bearer {token}"));
            yield return request14;
            request14 = null;
            this.EndTransaction("GET_GetStoryVoteCount");

            this.BeginTransaction("DELETE_DeleteLearnermappingRecordIfExists");
            WebTestRequest request16 = new WebTestRequest($"{this.Context["$BaseUrl"].ToString()}/api/LearnerMappingRecord/{aid}");
            request16.Method = "DELETE";
            request16.Encoding = System.Text.Encoding.GetEncoding("Windows-1252");
            request16.Headers.Add(new WebTestRequestHeader("Authorization", $"Bearer {token}"));
            yield return request16;
            request16 = null;
            this.EndTransaction("DELETE_DeleteLearnermappingRecordIfExists");

            this.BeginTransaction("DELETE_DeleteLearnerRecordById");
            WebTestRequest request15 = new WebTestRequest($"{this.Context["$BaseUrl"].ToString()}/api/LearnerRecord/user/{learnerRecordId1}");
            request15.Method = "DELETE";
            request15.Encoding = System.Text.Encoding.GetEncoding("Windows-1252");
            request15.Headers.Add(new WebTestRequestHeader("Authorization", $"Bearer {token}"));
            yield return request15;
            request15 = null;
            this.EndTransaction("DELETE_DeleteLearnerRecordById");
        }
    }
}

